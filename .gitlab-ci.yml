image: docker:stable

stages:
  - build
  - tests

nginx:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH'
      changes:
        - deployment/gitlab/nginx/*
      when: on_success
    - if: '$CI_COMMIT_MESSAGE =~ /\[ci buildNginx\]/i || $BUILD_NGINX'
      when: always
  script:
    - docker build . -f ./deployment/gitlab/nginx/Dockerfile

app:
  stage: build
  only:
    - branches
  script:
    - docker build . -f deployment/gitlab/php/Dockerfile

phpunit:
  stage: tests
  only:
    - branches
  services:
    - postgres:9.6.16-alpine
  script:
    - docker rm -f app_test_container db_test_container 2> /dev/null || true
    - docker build . -f deployment/gitlab/db/Dockerfile -t db_test_image
    - docker run -d --name db_test_container db_test_image
    - docker build . -f deployment/gitlab/php/Dockerfile -t app_test_image
    - sleep 5
    - docker run -d --name app_test_container --link db_test_container app_test_image
    - docker exec app_test_container bash -c "cp .env.ci .env"
    - docker exec app_test_container bash -c "php artisan key:generate"
    - docker exec app_test_container bash -c "php artisan migrate:fresh --database=test --seed"
    - docker exec app_test_container bash -c "php -d xdebug.remote_enable=0 vendor/phpunit/phpunit/phpunit"
  after_script:
    - docker rm -f app_test_container db_test_container 2> /dev/null || true
  variables:
    POSTGRES_DB: forge_test
    POSTGRES_USER: forge
    POSTGRES_PASSWORD: ""
    POSTGRES_HOST_AUTH_METHOD: "trust"
